import Head from "next/head";
import Image from "next/image";


import { SignIn, SignInButton, SignOutButton, useUser } from "@clerk/clerk-react";
import { api } from "~/utils/api";
import { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingSpinner, LoadingPage } from "~/components/loading";
import { useState } from "react";


dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const {user} = useUser();

  const [input, setInput] = useState("");

  const ctx = api.useContext();

  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAll.invalidate();

    }
  });



  if (!user) return null;

  console.log(user);

  return (

    <div className="flex gap-4 w-full">
      <Image src={user.profileImageUrl} alt="profile image" className="w-14 h-14 rounded-full" width={50} height={50}/>
      <input 
        placeholder="Type some emojis!" 
        className="bg-transparent grow outline-none "
        type="text"
        value={input}
        onChange={(e) => setInput(e.target.value)}
        disabled={isPosting}
      />
      <button onClick={() => {
        mutate({content: input})
      }
      } className=" text-slate-100 px-4 py-2 rounded-md">
        Post  
      </button>
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {

  const {post, author} = props;

  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-4"> 
      <Image src={author.profileImageUrl} className="w-14 h-14 rounded-full" alt={`@${author.username}'s profile pic`} width={50} height={50}/>
      <div className="flex flex-col">
        <div className="flex text-slate-300">
          <span className="">
            {author.username}
          </span>
          
          <span className="ml-2 text-slate-500">
          {`Â· ${dayjs(post.createdAt).fromNow()}`}

          </span>
        </div>
        <span className="text-xl">
          {post.content} 
        </span>
      </div>
    </div>
  )
}



const Feed = () => {
  const {data, isLoading: postsLoading} = api.posts.getAll.useQuery();
  
  if (postsLoading) return <LoadingPage/>

  if (!data) return <div>Something went wrong</div>

  return (
    <div className="flex flex-col">
      {data.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id}/>
      ))}
    </div>
  )
}




export default function Home() {

  const {isLoaded: userLoaded, isSignedIn} = useUser();

  api.posts.getAll.useQuery();

  // Return empdy div if user is not loaded
  if (!userLoaded) return (<div/>);



  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400">

          <div className ="flex border-b border-slate-400 p-4">

            
            {!isSignedIn && ( 
            <div className="flex justify-center">
              <SignInButton />
            </div>
            )}
            {isSignedIn && <CreatePostWizard/>}
            
          </div>

          <Feed/>
          

        </div>



      </main>
    </>
  );
}
